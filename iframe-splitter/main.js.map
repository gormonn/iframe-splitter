{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/display-splitter/display-splitter.component.css","webpack:///./src/app/display-splitter/display-splitter.component.html","webpack:///./src/app/display-splitter/display-splitter.component.ts","webpack:///./src/app/fullscreen/fullscreen.service.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/setup-splitter/setup-splitter.component.css","webpack:///./src/app/setup-splitter/setup-splitter.component.html","webpack:///./src/app/setup-splitter/setup-splitter.component.ts","webpack:///./src/app/storage-service/storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar>\\n</app-navbar>\\n<div *ngIf=\\\"storageService.isInEditMode\\\" class=\\\"full-screen\\\">\\n  <app-setup-splitter [config]=\\\"storageService.getConfig() | async\\\"></app-setup-splitter>\\n</div>\\n<div *ngIf=\\\"!storageService.isInEditMode\\\" class=\\\"full-screen\\\">\\n  <app-display-splitter top=0 left=0 [width]=\\\"width\\\" [height]=\\\"height\\\" id=\\\"main-display\\\" [config]=\\\"storageService.getConfig() | async\\\"></app-display-splitter>\\n</div>\\n\"","import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { StorageService } from './storage-service/storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  public width: number;\n  public height: number;\n  constructor(public storageService: StorageService) {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n  }\n\n  @HostListener('window:resize') onResize() {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AngularSplitModule } from 'angular-split';\n\nimport { AppComponent } from './app.component';\nimport { SetupSplitterComponent } from './setup-splitter/setup-splitter.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\nimport { FormsModule } from '@angular/forms';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { DisplaySplitterComponent } from './display-splitter/display-splitter.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SetupSplitterComponent,\n    NavbarComponent,\n    DisplaySplitterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularSplitModule,\n    BrowserAnimationsModule,\n    NgbModule.forRoot(),\n    AngularFontAwesomeModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \":host {\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.display-container {\\n    box-sizing: border-box;\\n    display: flex;\\n    height: 100%;\\n}\\n\\n.display-container .container {\\n    padding: 0px !important;\\n}\\n\\n.centered-content {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    align-items: center;\\n    justify-content: space-around;\\n    display: flex;\\n    float: none;\\n}\\n\\n.abs-area {\\n    position: absolute;\\n    -webkit-transform-origin: left top;\\n            transform-origin: left top\\n}\\n\"","module.exports = \"<!-- External Site -->\\n<iframe #contentIframe [ngStyle]=\\\"getElStyle()\\\" class=\\\"abs-area\\\" *ngIf=\\\"config.isContent && targetUrl && isValidUrl(config.iframeTarget)\\\"\\n  [src]=\\\"targetUrl\\\" frameborder=\\\"0\\\" allowfullscreen></iframe>\\n\\n<!-- Static Text -->\\n<div [ngStyle]=\\\"getElStyle()\\\" class=\\\"abs-area centered-content\\\" *ngIf=\\\"config.isContent && !isValidUrl(config.iframeTarget)\\\">{{config.iframeTarget}}</div>\\n\\n<!-- Split -->\\n<div *ngIf=\\\"!config.isContent\\\">\\n  <app-display-splitter [top]=\\\"splits()[0].top\\\" [left]=splits()[0].left [width]=\\\"splits()[0].width\\\" [height]=\\\"splits()[0].height\\\"\\n    [config]=\\\"config.nodes[0]\\\"></app-display-splitter>\\n  <app-display-splitter [top]=\\\"splits()[1].top\\\" [left]=splits()[1].left [width]=\\\"splits()[1].width\\\" [height]=\\\"splits()[1].height\\\"\\n    [config]=\\\"config.nodes[1]\\\"></app-display-splitter>\\n</div>\\n\"","import { Component, Input, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ISplitterConfig, StorageService } from '../storage-service/storage.service';\n\n@Component({\n  selector: 'app-display-splitter',\n  templateUrl: './display-splitter.component.html',\n  styleUrls: ['./display-splitter.component.css']\n})\nexport class DisplaySplitterComponent implements OnInit {\n\n  @Input()\n  public config: ISplitterConfig;\n\n  public targetUrl: any;\n\n  @Input()\n  public top: number;\n  @Input()\n  public left: number;\n  @Input()\n  public width: number;\n  @Input()\n  public height: number;\n\n  @ViewChild('contentIframe') contentIframeRef: ElementRef;\n\n  constructor(public storageService: StorageService, private sanitizer: DomSanitizer) {\n\n  }\n\n  ngOnInit() {\n    if (this.config && this.isValidUrl(this.config.iframeTarget)) {\n      this.targetUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.config.iframeTarget);\n    }\n\n    if (this.config.autoRefresh) {\n      this.doAutoRefresh();\n    }\n  }\n\n  public isValidUrl(str) {\n    const regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n    return regex.test(str);\n  }\n\n  public getElStyle() {\n    const scalePercent = this.config.scale || 100;\n    const scale = scalePercent / 100;\n    return {\n      transform: `scale(${scale})`,\n      top: this.top + 'px',\n      left: this.left + 'px',\n      width: (this.width / scale) + 'px',\n      height: (this.height / scale) + 'px'\n    };\n  }\n\n  public splits() {\n    let result;\n\n    const top = Number(this.top);\n    const left = Number(this.left);\n    const width = Number(this.width);\n    const height = Number(this.height);\n\n    if (this.config.direction === 'vertical') {\n      const firstSize = Math.round(this.config.size / 100 * height);\n      result = [{\n        top: top,\n        left: left,\n        width: width,\n        height: firstSize\n      }, {\n        top: top + firstSize,\n        left: left,\n        width: width,\n        height: height - firstSize\n      }];\n    } else {\n      const firstSize = Math.round(this.config.size / 100 * this.width);\n      result = [{\n        top: top,\n        left: left,\n        width: firstSize,\n        height: height\n      }, {\n        top: top,\n        left: left + firstSize,\n        width: width - firstSize,\n        height: height\n      }];\n    }\n\n    return result;\n  }\n\n  private doAutoRefresh() {\n    window.setInterval(() => {\n      if (this.contentIframeRef) {\n        const src = this.contentIframeRef.nativeElement.src;\n        this.contentIframeRef.nativeElement.src = '';\n        this.contentIframeRef.nativeElement.src = src;\n      }\n    }, this.config.autoRefresh * 1000);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FullscreenService {\n\n  constructor() { }\n\n  isInFullscreenMode() {\n    const fullScreenElement = document.fullscreenElement || document.webkitFullscreenElement || null;\n\n    return !!fullScreenElement;\n  }\n\n  goFullScreen() {\n    const element = document.querySelector('#main-display');\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n}\n","module.exports = \"<nav class=\\\"navbar navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Iframe Splitter</a>\\n\\n  <form class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"storageService.save()\\\">\\n    <button *ngIf=\\\"storageService.isInEditMode\\\" class=\\\"btn btn-outline-success my-2 my-sm-0 mx-2\\\" type=\\\"submit\\\">Save</button>\\n    <button *ngIf=\\\"!storageService.isInEditMode\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0 mx-2\\\" (click)=\\\"storageService.openEditMode()\\\" type=\\\"button\\\">Edit</button>\\n    <button *ngIf=\\\"!storageService.isInEditMode\\\" class=\\\"btn btn-outline-primary my-2 my-sm-0 mx-2\\\" (click)=\\\"fullscreenService.goFullScreen()\\\" type=\\\"button\\\">Fullscreen</button>\\n  </form>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FullscreenService } from '../fullscreen/fullscreen.service';\nimport { StorageService } from '../storage-service/storage.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html'\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public fullscreenService: FullscreenService, public storageService: StorageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \":host {\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.setup-container {\\n    background-color: #eeeeee;\\n    box-sizing: border-box;\\n    display: flex;\\n    height: 100%;\\n}\\n\\n.centered-content {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    align-items: center;\\n    justify-content: space-around;\\n    display: flex;\\n    float: none;\\n}\\n\\n.split-container {\\n    width: 100%;\\n}\\n\\n.btn {\\n    margin: 6px;\\n}\\n\"","module.exports = \"<div class=\\\"setup-container\\\">\\n  <!-- Content Setup -->\\n  <div class=\\\"centered-content container\\\" *ngIf=\\\"config.isContent\\\">\\n    <form>\\n      <div class=\\\"form-group row justify-content-center\\\">\\n        <button class=\\\"btn btn btn-outline-dark\\\" (click)=\\\"split('horizontal')\\\">\\n          <fa name=\\\"arrows-h\\\"></fa> split horizontal</button>\\n        <button class=\\\"btn btn btn-outline-dark\\\" (click)=\\\"split('vertical')\\\">\\n          <fa name=\\\"arrows-v\\\"></fa> split vertical</button>\\n        <button *ngIf=\\\"parent\\\" class=\\\"btn btn btn-outline-danger\\\" (click)=\\\"remove()\\\">\\n          <fa name=\\\"times-circle\\\"></fa> remove</button>\\n      </div>\\n      <div class=\\\"form-group row\\\">\\n        <input name=\\\"iframeTarget\\\" class=\\\"form-control form-control-lg\\\" type=\\\"text\\\" [(ngModel)]=\\\"config.iframeTarget\\\" placeholder=\\\"target url\\\"\\n        />\\n      </div>\\n      <div class=\\\"form-group row justify-content-center text-center\\\">\\n        <div class=\\\"col-md-5 mb-3\\\">\\n          <label for=\\\"scale-input\\\">Scale (%)</label>\\n          <input name=\\\"scale\\\" type=\\\"number\\\" [(ngModel)]=\\\"config.scale\\\" class=\\\"form-control m-0\\\" id=\\\"scale-input\\\" autocomplete=\\\"off\\\"\\n            min=\\\"20\\\" max=\\\"400\\\" />\\n        </div>\\n        <div class=\\\"col-md-5 mb-3\\\">\\n          <label for=\\\"scale-input\\\">Refresh (sec)</label>\\n          <input name=\\\"autoRefresh\\\" type=\\\"number\\\" [(ngModel)]=\\\"config.autoRefresh\\\" class=\\\"form-control m-0\\\" id=\\\"scale-input\\\" autocomplete=\\\"off\\\"\\n            min=\\\"0\\\" />\\n        </div>\\n\\n      </div>\\n    </form>\\n  </div>\\n  <!-- Splitter -->\\n  <div *ngIf=\\\"!config.isContent\\\" class=\\\"split-container\\\">\\n    <split [direction]=\\\"config.direction\\\" gutterSize=\\\"10\\\" gutterColor=\\\"#ffffff\\\" (dragEnd)=\\\"onDragEnd($event)\\\">\\n      <ng-template ngFor let-area [ngForOf]=\\\"config.nodes\\\" let-index=\\\"index\\\">\\n        <split-area [size]=\\\"area.size\\\">\\n          <app-setup-splitter [config]=\\\"area\\\" [parent]=\\\"this\\\"></app-setup-splitter>\\n        </split-area>\\n      </ng-template>\\n    </split>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, AfterViewInit } from '@angular/core';\nimport * as _ from 'lodash';\nimport { StorageService } from '../storage-service/storage.service';\n\n\n@Component({\n  selector: 'app-setup-splitter',\n  templateUrl: './setup-splitter.component.html',\n  styleUrls: ['./setup-splitter.component.css']\n})\nexport class SetupSplitterComponent implements OnInit, AfterViewInit {\n\n  @Input()\n  public config;\n\n  @Input()\n  public parent?: SetupSplitterComponent;\n\n  constructor(public storageService: StorageService) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.parent) {\n      this.storageService.activeConfig = this.config;\n    }\n  }\n\n  split(direction) {\n    this.config.isContent = false;\n    this.config.direction = direction;\n    this.config.nodes = [\n      _.clone(StorageService.defaultConfig),\n      _.clone(StorageService.defaultConfig)\n    ];\n\n    this.config.nodes[0].index = 0;\n    this.config.nodes[1].index = 1;\n\n    this.config.nodes[0].iframeTarget = this.config.iframeTarget;\n    this.config.nodes[0].scale = this.config.scale;\n    this.config.nodes[0].autoRefresh = this.config.autoRefresh;\n  }\n\n  remove() {\n    if (this.parent) {\n      const parent = this.parent;\n      const nodeToKeep = this.config.index === 0 ? parent.config.nodes[1] : parent.config.nodes[0];\n      parent.config.nodes = nodeToKeep.nodes;\n      parent.config.isContent = nodeToKeep.isContent;\n      parent.config.size = nodeToKeep.size;\n      parent.config.iframeTarget = nodeToKeep.iframeTarget;\n    }\n  }\n\n  onDragEnd(event) {\n    this.config.size = Math.round(event.sizes[0]);\n    this.config.nodes[0].size = this.config.size;\n    this.config.nodes[1].size = 100 - this.config.size;\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { SetupSplitterComponent } from '../setup-splitter/setup-splitter.component';\nimport * as _ from 'lodash';\nimport { BehaviorSubject } from 'rxjs/Rx';\n\n// whats wrong with the ts linter...\n// tslint:disable-next-line:no-var-keyword\nexport interface ISplitterConfig {\n  isContent: boolean;\n  direction: string;\n  size: number;\n  index: number;\n  iframeTarget: string;\n  scale: number;\n  autoRefresh: number;\n  nodes: ISplitterConfig[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  public static defaultConfig: ISplitterConfig = {\n    isContent: true,\n    direction: '',\n    size: 50,\n    index: 0,\n    scale: 100,\n    autoRefresh: 0,\n    iframeTarget: '',\n    nodes: []\n  };\n\n  private rootConfig: BehaviorSubject<ISplitterConfig>;\n  public activeConfig;\n  public isInEditMode = false;\n\n  constructor() {\n    let storedConfig = _.clone(StorageService.defaultConfig);\n    try {\n      storedConfig = JSON.parse(window.localStorage.getItem('iframe-splitter-config'));\n    } catch (error) {\n      // silent error\n    }\n    if (!storedConfig) {\n      this.isInEditMode = true;\n      storedConfig = _.clone(StorageService.defaultConfig);\n    }\n\n    this.rootConfig = <BehaviorSubject<ISplitterConfig>> new BehaviorSubject(storedConfig);\n  }\n\n  public save() {\n    this.isInEditMode = false;\n    this.rootConfig.next(this.activeConfig);\n    window.localStorage.setItem('iframe-splitter-config', JSON.stringify(this.activeConfig));\n  }\n\n  public openEditMode() {\n    this.isInEditMode = true;\n  }\n\n  public getConfig() {\n    return this.rootConfig.asObservable();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}